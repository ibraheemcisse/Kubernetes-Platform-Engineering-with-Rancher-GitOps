# helm-charts/cluster-issuers/Chart.yaml
apiVersion: v2
name: cluster-issuers
description: Cluster-wide certificate issuers for cert-manager
type: application
version: 0.1.0
appVersion: "1.0"

dependencies: []

keywords:
  - certificates
  - ssl
  - tls
  - cert-manager
  - letsencrypt

maintainers:
  - name: IOC Labs Platform Team
    email: platform@ioc-labs.com

---
# helm-charts/cluster-issuers/values.yaml
# Default values for cluster-issuers

letsencrypt:
  enabled: true
  staging:
    enabled: true
    email: "platform@ioc-labs.com"  # Update with your email
  production:
    enabled: true
    email: "platform@ioc-labs.com"  # Update with your email

selfsigned:
  enabled: true

# CloudFlare DNS challenge (for future use)
cloudflare:
  enabled: false
  email: ""
  apiTokenSecretName: "cloudflare-api-token"
  apiTokenSecretKey: "api-token"

# AWS Route53 DNS challenge (for future use)
route53:
  enabled: false
  region: "us-east-1"
  hostedZoneID: ""
  accessKeySecretName: "route53-credentials"
  accessKeySecretKey: "access-key"
  secretKeySecretKey: "secret-key"

---
# helm-charts/cluster-issuers/templates/letsencrypt-staging.yaml
{{- if .Values.letsencrypt.enabled }}
{{- if .Values.letsencrypt.staging.enabled }}
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
  labels:
    {{- include "cluster-issuers.labels" . | nindent 4 }}
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: {{ .Values.letsencrypt.staging.email }}
    privateKeySecretRef:
      name: letsencrypt-staging
    solvers:
    - http01:
        ingress:
          class: nginx
    {{- if .Values.cloudflare.enabled }}
    - dns01:
        cloudflare:
          email: {{ .Values.cloudflare.email }}
          apiTokenSecretRef:
            name: {{ .Values.cloudflare.apiTokenSecretName }}
            key: {{ .Values.cloudflare.apiTokenSecretKey }}
    {{- end }}
    {{- if .Values.route53.enabled }}
    - dns01:
        route53:
          region: {{ .Values.route53.region }}
          hostedZoneID: {{ .Values.route53.hostedZoneID }}
          accessKeyID: 
            name: {{ .Values.route53.accessKeySecretName }}
            key: {{ .Values.route53.accessKeySecretKey }}
          secretAccessKeySecretRef:
            name: {{ .Values.route53.accessKeySecretName }}
            key: {{ .Values.route53.secretKeySecretKey }}
    {{- end }}
{{- end }}
{{- end }}

---
# helm-charts/cluster-issuers/templates/letsencrypt-prod.yaml
{{- if .Values.letsencrypt.enabled }}
{{- if .Values.letsencrypt.production.enabled }}
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  labels:
    {{- include "cluster-issuers.labels" . | nindent 4 }}
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: {{ .Values.letsencrypt.production.email }}
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx
    {{- if .Values.cloudflare.enabled }}
    - dns01:
        cloudflare:
          email: {{ .Values.cloudflare.email }}
          apiTokenSecretRef:
            name: {{ .Values.cloudflare.apiTokenSecretName }}
            key: {{ .Values.cloudflare.apiTokenSecretKey }}
    {{- end }}
    {{- if .Values.route53.enabled }}
    - dns01:
        route53:
          region: {{ .Values.route53.region }}
          hostedZoneID: {{ .Values.route53.hostedZoneID }}
          accessKeyID: 
            name: {{ .Values.route53.accessKeySecretName }}
            key: {{ .Values.route53.accessKeySecretKey }}
          secretAccessKeySecretRef:
            name: {{ .Values.route53.accessKeySecretName }}
            key: {{ .Values.route53.secretKeySecretKey }}
    {{- end }}
{{- end }}
{{- end }}

---
# helm-charts/cluster-issuers/templates/selfsigned.yaml
{{- if .Values.selfsigned.enabled }}
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: selfsigned
  labels:
    {{- include "cluster-issuers.labels" . | nindent 4 }}
spec:
  selfSigned: {}
{{- end }}

---
# helm-charts/cluster-issuers/templates/_helpers.tpl
{{/*
Expand the name of the chart.
*/}}
{{- define "cluster-issuers.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
*/}}
{{- define "cluster-issuers.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "cluster-issuers.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "cluster-issuers.labels" -}}
helm.sh/chart: {{ include "cluster-issuers.chart" . }}
{{ include "cluster-issuers.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "cluster-issuers.selectorLabels" -}}
app.kubernetes.io/name: {{ include "cluster-issuers.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}
